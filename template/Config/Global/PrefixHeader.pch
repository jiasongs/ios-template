//
//  PrefixHeader.pch
//  template
//
//  Created by jiasong on 2019/3/30.
//  Copyright © 2019 Facebook. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch

#pragma mark - 头文件
// 全局头文件
#import <Masonry.h>
#import <QMUIKit.h>
#import <JKCategories/JKCategories.h>
#import <SDWebImage.h>
#import <JSONModelLib.h>
#import <YYText.h>
#import "ApiClient.h"
#import "ServerClient.h"
#import "LogManager.h"
#import "ToastManager.h"
#import "QMUIButton+Factory.h"
#import "NSDate+Timestamp.h"
#import "UITableView+FDTemplateLayoutCell.h"
#import "ActionsManager.h"
#import "AlertManager.h"
#import "Constants.h"

#pragma mark - Server
#define ServerInstance [ServerClient sharedClient]

// 打印
#ifdef DEBUG
#define Log(fmt, ...) [[LogManager sharedInstance] printLogWithFile:__FILE__ line:__LINE__ func:__func__ logString:[NSString stringWithFormat:(@"%@" fmt),@"",##__VA_ARGS__]]
#else
#define Log(...)
#define NSLog(...)
#endif

// 适配
#define ScaleSize(size) (size / 375.0f * SCREEN_WIDTH)

// 拼接字符串
#define NSStringFormat(format,...) [NSString stringWithFormat:format,##__VA_ARGS__]

// 转换时间戳
#define NSDateFormat(timestamp, formatStr) [NSDate dateWithTimestamp:timestamp format:formatStr]

// 锁
#ifndef Lock
#define Lock(lock) dispatch_semaphore_wait(lock, DISPATCH_TIME_FOREVER);
#endif
#ifndef UnLock
#define UnLock(lock) dispatch_semaphore_signal(lock);
#endif

// 主线程
#ifndef DispatchAsyncOnMainQueue
#define DispatchAsyncOnMainQueue(func) \
__weak typeof(self) weakSelf = self; \
dispatch_async(dispatch_get_main_queue(), ^{ \
typeof(weakSelf) self = weakSelf; \
{func} \
});
#endif

//-----@weakify-----

#ifndef weakify
#if DEBUG
#if __has_feature(objc_arc)
#define weakify(object) autoreleasepool{} __weak __typeof__(object) weak##_##object = object;
#else
#define weakify(object) autoreleasepool{} __block __typeof__(object) block##_##object = object;
#endif
#else
#if __has_feature(objc_arc)
#define weakify(object) try{} @finally{} {} __weak __typeof__(object) weak##_##object = object;
#else
#define weakify(object) try{} @finally{} {} __block __typeof__(object) block##_##object = object;
#endif
#endif
#endif

//-----@strongify-----

#ifndef strongify
#if DEBUG
#if __has_feature(objc_arc)
#define strongify(object) autoreleasepool{} __typeof__(object) object = weak##_##object;
#else
#define strongify(object) autoreleasepool{} __typeof__(object) object = block##_##object;
#endif
#else
#if __has_feature(objc_arc)
#define strongify(object) try{} @finally{} __typeof__(object) object = weak##_##object;
#else
#define strongify(object) try{} @finally{} __typeof__(object) object = block##_##object;
#endif
#endif
#endif


#endif
